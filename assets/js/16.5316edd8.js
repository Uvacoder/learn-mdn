(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{382:function(t,a,e){"use strict";e.r(a);var r=e(25),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"javascript-data-types-and-data-structures"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript-data-types-and-data-structures"}},[t._v("#")]),t._v(" JavaScript data types and data structures")]),t._v(" "),e("p",[t._v("Programing languages all have built-in data structures, but these often differ from one language to another. This article attempts to list the built-in data structures available in JavaScript and what properties they have. These can be used to build other data structures. Wherever possible, comparisons with other languages are drawn.")]),t._v(" "),e("h2",{attrs:{id:"dynamic-typing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-typing"}},[t._v("#")]),t._v(" Dynamic typing")]),t._v(" "),e("p",[t._v("JavaScript is a "),e("code",[t._v("loosely typed")]),t._v(" and "),e("code",[t._v("dynamic")]),t._v(" language. Variables in JavaScript are not directly associated with any particular value type, and any variable can be assigned(and re-assigned) values of all types.")]),t._v(" "),e("h2",{attrs:{id:"data-and-structure-types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#data-and-structure-types"}},[t._v("#")]),t._v(" Data and Structure types")]),t._v(" "),e("p",[t._v("The latest ECMAScript standard defines nine types:")]),t._v(" "),e("ul",[e("li",[t._v("Six "),e("strong",[t._v("Data Types")]),t._v(" that are "),e("a",{attrs:{href:"../../docs/Glossary/Primitive"}},[t._v("primitives")]),t._v(", checked by "),e("a",{attrs:{href:"../../docs/Web/JavaScript/Reference/Operators/typeof"}},[t._v("typeof")]),t._v(" operator:\n"),e("ul",[e("li",[e("a",{attrs:{href:"../../docs/Glossary/undefined"}},[t._v("undefined")]),t._v(": "),e("code",[t._v('typeof instance === "undefined"')])]),t._v(" "),e("li",[e("a",{attrs:{href:"../../docs/Glossary/Boolean"}},[t._v("Boolean")]),t._v(": "),e("code",[t._v('typeof instance === "boolean"')])]),t._v(" "),e("li",[e("a",{attrs:{href:"../../docs/Glossary/Number"}},[t._v("Number")]),t._v(": "),e("code",[t._v('typeof instance === "number"')])]),t._v(" "),e("li",[e("a",{attrs:{href:"../../docs/Glossary/String"}},[t._v("String")]),t._v(": "),e("code",[t._v('typeof instance === "string"')])]),t._v(" "),e("li",[e("a",{attrs:{href:"../../docs/Glossary/BigInt"}},[t._v("BigInt")]),t._v(": "),e("code",[t._v('typeof instance === "bigint"')])]),t._v(" "),e("li",[e("a",{attrs:{href:"../../docs/Glossary/Symbol"}},[t._v("Symbol")]),t._v(": "),e("code",[t._v('typeof instance === "symbol"')])])])]),t._v(" "),e("li",[e("strong",[t._v("Structural Types")]),t._v(":\n"),e("ul",[e("li",[e("a",{attrs:{href:"../../docs/Glossary/Object"}},[t._v("Object")]),t._v(": "),e("code",[t._v('typeof instance === "object"')]),t._v(". Special non-data but "),e("strong",[t._v("Structural type")]),t._v(" for any "),e("a",{attrs:{href:""}},[t._v("constructed")]),t._v(" object instance also used as data structures: new "),e("a",{attrs:{href:""}},[t._v("Object")]),t._v(", new "),e("a",{attrs:{href:"Array"}}),t._v(", new "),e("a",{attrs:{href:""}},[t._v("Map")]),t._v(", new "),e("a",{attrs:{href:""}},[t._v("Set")]),t._v(", new "),e("a",{attrs:{href:""}},[t._v("WeakMap")]),t._v(", new "),e("a",{attrs:{href:""}},[t._v("WeakSet")]),t._v(", new "),e("a",{attrs:{href:""}},[t._v("Date")]),t._v(" and almost everything made with "),e("a",{attrs:{href:""}},[t._v("new keyword")]),t._v(".")]),t._v(" "),e("li",[e("a",{attrs:{href:""}},[t._v("Function")]),t._v(": a non-data structure, though it also answers for "),e("code",[t._v("typeof")]),t._v(' operator: `typeof instance === "function"\'. This is merely a special shorthand for Functions, through every Function constructor is derived from Object constructor.')])])]),t._v(" "),e("li",[e("strong",[t._v("Structural Root")]),t._v(" Primitive:\n"),e("ul",[e("li",[e("a",{attrs:{href:""}},[t._v("null")]),t._v(": "),e("code",[t._v('typeof instance === "object"')]),t._v(". Special "),e("a",{attrs:{href:"../../docs/Glossary/Primitive"}},[t._v("primitives")]),t._v(" type having additional usage for its value: if object is not inherited, the "),e("code",[t._v("null")]),t._v(" is shown.")])])])])])}),[],!1,null,null,null);a.default=s.exports}}]);